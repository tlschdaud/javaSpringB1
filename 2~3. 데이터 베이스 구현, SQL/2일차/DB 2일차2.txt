객체 종류

데이터 사전
- 데이터베이스를 구상하고 운영하는데 필요한 모든 정보를 저장하는 특수한 테이블로 데이터베이스가 생성되는 시점에 자동으로 만들어집니다.

- DICTIONARY / 동의어 DICT

-SELECT * FROM DICT;


1. USER_ 접두어를 가진 데이터 사전

- 현재 오라클에 접속해 있는 사용자가 소유한 객체 정보가 보관되어 있습니다.

USER_TABLES : 현재 사용자가 소유한 테이블

2. ALL_ 접두어를 가진 데이터 사전
- 오라클 데이터베이스에 접속해 있는 사용자가 소유한 객체 및 다른 사용자가 소유한 객체 중 사용이 허락되어 있는 객체 정보를 가지고 있습니다.

ALL_TABLES : 다른 사용자가 소유한 테이블까지 포함

3. DBA_ 접두어를 가진 데이터 사전


-------------------------------------------------------
더 빠른 검색을 위한 인덱스
1. 인덱스란?
    INDEX - 목차
    1장 ...  - P10
    2장 ...  - P110

     - 레코드의 컬럼 데이터의 물리적 위치 기록
       - 정렬 방향성

- Table Full Scan
   - 테이블 레코드 전체 검색 : 인덱스가 X

- Index Scan
   - 인덱스를 통한 검색

참고)
    클러스터 인덱스
      - 검색의 기준 인덱스
      - 기본키, 기본키가 없는 경우 UNIQUE 키, 

    보조 인덱스
     - 클러스터 인덱스 외의 인덱스
     - 보조 인덱스 -> 검색된 레코드 -> 클러스터 인덱스

- USER_INDEXES :  사용자가 추가한 인덱스 정보
-  USER_IND_COLUMNS : 추가한 인덱스의 컬럼 정보

2. 인덱스 생성
   CREATE INDEX 인덱스명 
      ON 테이블명 (컬럼명1 ASC|DESC, 컬럼명2 ASC|DESC ...);

   참고) 
        상품 목옥을 최신순(REGDT), 상품 분류(CATEGORY) 별 조회
         CREATE INDEX idx_테이블명_ ...
             ON 테이블명 (REGDT DESC, CATEGORY)

참고)
       ASC : 오름차순 정렬(기본값 - 생략 가능)
       DESC : 내림차순 정렬 

3. 인덱스 삭제
   DROP INDEX 인덱스명;

테이블처럼 사용하는 뷰
1. 뷰란?
   가상의 테이블
        - SELECT 결과물 -> 가상의 테이블

2. 뷰의 사용 목적
- 편리성 : 복잡한 SELECT 구문의 결과를 가살의 테이블로 만들면 복잡성이 사라진다.

- 보안성 : 

3. 뷰 생성
- 생성 / 수정
  CREATE VIEW 뷰이름 AS (SELECT 문 ...) // 생성

  CREATE OR REPLACE VIEW ... // 뷰가 정의 X -> 생성, 뷰가 정의 O -> 수정

  - 적절한 권한 부여
  - 시스템 권한 : CREATET VIEW
  - 뷰의 정보
      USER_VIEWS / ALL_VIEWS

- 조회
   - 테이블 조회와 동일하게 사용
   - SELECT 
   - 

- 삭제
   - DROP VIEW 뷰이름

4. 인라인 뷰를 사용한 TOP-N SQL문
- 인라인 뷰
   SELECT ... FROM (SELECT ...)
ex) SELECT EMPNO AS "사원번호", ENAME AS "사원명", JOB AS "직책명" FROM EMP;
    ->SELECT EMPNO  "사원번호", ENAME  "사원명", JOB  "직책명" FROM EMP;
    ->SELECT EMPNO 사원번호, ENAME 사원명, JOB 직책명 FROM EMP; (띄어쓰기 시 반드시 " " 적용)
- ROWNUM

참고)
   별칭(Alias) - AS
                - AS "컬럼명"
                - AS는 생략 가능
                - "" 생략가능 / 띄어쓰기 시에는 생략 불가

                - 테이블에도 적용 가능














































